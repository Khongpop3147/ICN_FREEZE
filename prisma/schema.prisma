datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           String   @id @default(uuid())
  name         String
  email        String   @unique
  passwordHash String
  role         String   @default("USER")
  addresses    Address[]
  cart         Cart?
  orders       Order[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Category {
  id        String    @id @default(uuid())
  name      String    @unique
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Product {
  id          String    @id @default(uuid())
  name        String
  description String?
  price       Float
  imageUrl    String?
  stock       Int       @default(0)
  category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  String?
  orderItems  OrderItem[]
  cartItems   CartItem[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Cart {
  id        String     @id @default(uuid())
  user      User       @relation(fields: [userId], references: [id])
  userId    String     @unique
  items     CartItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model CartItem {
  id        String   @id @default(uuid())
  cart      Cart     @relation(fields: [cartId], references: [id])
  cartId    String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Int      @default(1)
}

model Order {
  id            String      @id @default(uuid())
  user          User        @relation(fields: [userId], references: [id])
  userId        String
  status        String      @default("PENDING")
  totalAmount   Float
  paymentMethod String?
  items         OrderItem[]
  coupon        Coupon?     @relation(fields: [couponId], references: [id])
  couponId      String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model OrderItem {
  id              String   @id @default(uuid())
  order           Order    @relation(fields: [orderId], references: [id])
  orderId         String
  product         Product  @relation(fields: [productId], references: [id])
  productId       String
  quantity        Int
  priceAtPurchase Float
}

model Coupon {
  id            String   @id @default(uuid())
  code          String   @unique
  discountType  String
  discountValue Float
  usageLimit    Int?
  usedCount     Int      @default(0)
  expiresAt     DateTime?
  orders        Order[]
}

model Address {
  id         String  @id @default(uuid())
  user       User    @relation(fields: [userId], references: [id])
  userId     String
  recipient  String
  line1      String
  line2      String?
  city       String
  postalCode String
  country    String
}

model AuditLog {
  id          String   @id @default(uuid())
  action      String
  entity      String
  entityId    String
  performedBy String
  timestamp   DateTime @default(now())
}
